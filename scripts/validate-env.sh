#!/bin/bash

# Environment Validation Script
# Checks if required environment variables are set and files exist

set -e

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

echo "üîç Environment Validation"
echo "========================="

# Check if .env file exists
if [ -f "$ROOT_DIR/.env" ]; then
    echo "‚úÖ .env file exists"
    
    # Source the .env file
    set -a
    source "$ROOT_DIR/.env"
    set +a
    
    # Check critical variables
    echo ""
    echo "üîë Environment Variables:"
    echo "NODE_ENV: ${NODE_ENV:-‚ùå NOT SET}"
    echo "POSTGRES_HOST: ${POSTGRES_HOST:-‚ùå NOT SET}"
    echo "POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:+‚úÖ SET}${POSTGRES_PASSWORD:-‚ùå NOT SET}"
    echo "JWT_SECRET: ${JWT_SECRET:+‚úÖ SET}${JWT_SECRET:-‚ùå NOT SET}"
    echo "KAFKA_BROKERS: ${KAFKA_BROKERS:-‚ùå NOT SET}"
    echo "REDIS_HOST: ${REDIS_HOST:-‚ùå NOT SET}"
    
    # Validate production security
    if [ "$NODE_ENV" = "production" ]; then
        echo ""
        echo "üîí Production Security Check:"
        
        if [[ "$JWT_SECRET" == *"CHANGE_THIS"* || "$JWT_SECRET" == *"change"* || "$JWT_SECRET" == *"dev"* ]]; then
            echo "‚ùå JWT_SECRET appears to be a default/dev value - CHANGE IT!"
        else
            echo "‚úÖ JWT_SECRET appears to be customized"
        fi
        
        if [[ "$POSTGRES_PASSWORD" == *"CHANGE_THIS"* || "$POSTGRES_PASSWORD" == "root" ]]; then
            echo "‚ùå POSTGRES_PASSWORD appears to be default - CHANGE IT!"
        else
            echo "‚úÖ POSTGRES_PASSWORD appears to be customized"
        fi
    fi
    
else
    echo "‚ùå .env file not found"
    echo "üí° Run: npm run setup:dev or npm run setup:prod"
fi

# Check sample files
echo ""
echo "üìù Sample Files:"
for sample in .env.sample .env.development.sample .env.production.sample; do
    if [ -f "$ROOT_DIR/$sample" ]; then
        echo "‚úÖ $sample exists"
    else
        echo "‚ùå $sample missing"
    fi
done

# Check Docker Compose files
echo ""
echo "üê≥ Docker Files:"
for compose in docker-compose.yml docker-compose.dev.yml; do
    if [ -f "$ROOT_DIR/$compose" ]; then
        echo "‚úÖ $compose exists"
    else
        echo "‚ùå $compose missing"
    fi
done

echo ""
echo "üéØ Validation complete!"
