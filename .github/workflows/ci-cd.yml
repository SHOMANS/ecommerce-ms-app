name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  NODE_VERSION: "20.x"
  PNPM_VERSION: "10.14.0"

jobs:
  build-and-lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Build projects
        run: pnpm build

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build-and-lint
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Auth Service
        run: |
          docker build -f apps/auth-service/Dockerfile \
            -t ecommerce-auth:latest .

      - name: Build Users Service
        run: |
          docker build -f apps/users-service/Dockerfile \
            -t ecommerce-users:latest .

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: docker-build
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-lint, docker-build, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    timeout-minutes: 15

    steps:
      - name: Deploy to Production
        run: |
          echo "Production deployment will be handled by deploy workflow"
