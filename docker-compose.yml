version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_PASSWORD: root # هذا الباسورد المؤقت لـ superuser postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - default
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka:3.6
    restart: always
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_KRAFT_MODE: 'false'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper
    healthcheck:
      test: ['CMD-SHELL', 'kafka-topics.sh --bootstrap-server localhost:9092 --list']
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      PORT: 3001
      JWT_SECRET: secret
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: auth_user
      DB_PASSWORD: password
      DB_NAME: auth_service
      KAFKA_BROKERS: kafka:9093
      NODE_ENV: development
  users-service:
    build:
      context: .
      dockerfile: ./apps/users-service/Dockerfile
    ports:
      - '3002:3002'
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      PORT: 3002
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: users_user
      DB_PASSWORD: password
      DB_NAME: users_service
      KAFKA_BROKERS: kafka:9093
      NODE_ENV: development
  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - '8080:80' # gateway exposed on localhost:8080
    volumes:
      - ./gateway/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service
      - users-service
volumes:
  pgdata:
